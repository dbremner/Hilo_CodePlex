<!--
===============================================================================
 Microsoft patterns & practices
 Hilo Guidance
===============================================================================
 Copyright © Microsoft Corporation.  All rights reserved.
 This code released under the terms of the 
 Microsoft patterns & practices license (http://hilo.codeplex.com/license)
===============================================================================
-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Hilo">

    <!-- Brush for the background in the splashscreen -->
    <SolidColorBrush x:Key="GreySplashScreenColor" Color="#292929"/>
    <SolidColorBrush x:Key="HiloHighlightBrush" Color="#FFF19720"/>
    <SolidColorBrush x:Key="HiloPressedTextBrush" Color="#FFF9C074"/>
    <ImageBrush x:Key="HiloDefaultImageBrush" ImageSource="Assets/Hilo150b.png" Stretch="UniformToFill" />
    <ImageBrush x:Key="HiloPageBackgroundBrush" ImageSource="Assets/MSDN_Hilo_bgoverlay_v2_022712.png" Stretch="Uniform"/>
    
    <!-- Item templates -->

    <!-- Grid-appropriate 250 pixel square item template as seen in the MainHubView -->
    <DataTemplate x:Key="HiloGroupedItemTemplate">
        <Grid HorizontalAlignment="Left" Width="250" Height="250">
            <Border Background="{StaticResource HiloDefaultImageBrush}">
                <Image Source="{Binding Thumbnail}" Stretch="UniformToFill"/>
            </Border>
        </Grid>
    </DataTemplate>

    <!-- List snap item template for MainHubView -->
    <DataTemplate x:Key="HiloSnapItemTemplate">
        <Grid Margin="6">            
            <Border Background="{StaticResource HiloDefaultImageBrush}" >
                <Image Source="{Binding Thumbnail}" Stretch="UniformToFill"/>
            </Border>
        </Grid>
    </DataTemplate>

    <!-- Hilo TextButtonStyle -->
    <Style x:Key="HiloTextButtonStyle" TargetType="Button">
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <TextBlock
                            x:Name="Text"
                            Text="{TemplateBinding Content}"
                            Margin="3,-7,3,10"
                            TextWrapping="NoWrap"
                            Style="{StaticResource SubheaderTextStyle}"/>
                        <Rectangle
                            x:Name="FocusVisualWhite"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualWhiteStrokeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="1.5"/>
                        <Rectangle
                            x:Name="FocusVisualBlack"
                            IsHitTestVisible="False"
                            Stroke="{StaticResource FocusVisualBlackStrokeBrush}"
                            StrokeEndLineCap="Square"
                            StrokeDashArray="1,1"
                            Opacity="0"
                            StrokeDashOffset="0.5"/>
                        <!-- ApplicationHoverTextBrush-->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HiloHighlightBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HiloPressedTextBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Text" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlDisabledTextBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- GridViewItem Style -->
    <Style x:Key="HiloImageGridViewItem" TargetType="GridViewItem">
        <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
        <Setter Property="Background" Value="{StaticResource HiloDefaultImageBrush}"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="IsHoldingEnabled" Value="True"/>
        <Setter Property="Margin" Value="0,0,10,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="GridViewItem">
                    <Border x:Name="OuterContainer">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PointerOverBorder"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0"
                                             To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <TapDownThemeAnimation TargetName="ContentContainer" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="contentPresenter" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0"
                                             To="{StaticResource ListViewItemDisabledOpacity}" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionHintStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="NoSelectionHint" GeneratedDuration="0:0:0.65"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="VerticalSelectionHint">
                                    <Storyboard>
                                        <SwipeHintThemeAnimation TargetName="SelectionBackground" ToVerticalOffset="25" ToHorizontalOffset="0" />
                                        <SwipeHintThemeAnimation TargetName="ContentBorder" ToVerticalOffset="25" ToHorizontalOffset="0" />
                                        <SwipeHintThemeAnimation TargetName="SelectedCheckMark" ToVerticalOffset="25" ToHorizontalOffset="0" />
                                        <DoubleAnimation Storyboard.TargetName="HintGlyph" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0"
                                             To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HorizontalSelectionHint">
                                    <Storyboard>
                                        <SwipeHintThemeAnimation TargetName="SelectionBackground" ToHorizontalOffset="-25" ToVerticalOffset="0" />
                                        <SwipeHintThemeAnimation TargetName="ContentBorder" ToHorizontalOffset="-25" ToVerticalOffset="0" />
                                        <SwipeHintThemeAnimation TargetName="SelectedCheckMark" ToHorizontalOffset="-25" ToVerticalOffset="0" />
                                        <DoubleAnimation Storyboard.TargetName="HintGlyph" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoSelectionHint" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selecting">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectionBackground" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="SelectingGlyph" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="HintGlyphBorder" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectionBackground" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="SelectedCheckMark" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselecting">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HintGlyphBorder" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HintGlyphBorder" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectionBackground" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="SelectedCheckMark" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DragStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="NotDragging" GeneratedDuration="0:0:0.650"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NotDragging" />
                                <VisualState x:Name="Dragging">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="InnerDragContent" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="{StaticResource ListViewItemDragOpacity}" />
                                        <DragItemThemeAnimation TargetName="InnerDragContent" />
                                        <FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter" />
                                        <FadeOutThemeAnimation TargetName="SelectedBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DraggingTarget">
                                    <Storyboard>
                                        <DropTargetItemThemeAnimation TargetName="OuterContainer" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MultipleDraggingPrimary">
                                    <Storyboard>
                                        <!-- These two Opacity animations are required - the FadeInThemeAnimations
                                             on the same elements animate an internal Opacity. -->
                                        <DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayBackground" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayText" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="InnerDragContent" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="{StaticResource ListViewItemDragOpacity}" />
                                        <FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
                                        <FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
                                        <DragItemThemeAnimation TargetName="InnerDragContent" />
                                        <FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter" />
                                        <FadeOutThemeAnimation TargetName="SelectedBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MultipleDraggingSecondary">
                                    <Storyboard>
                                        <FadeOutThemeAnimation TargetName="ContentContainer" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ReorderHintStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="NoReorderHint" GeneratedDuration="0:0:0.65"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NoReorderHint"/>
                                <VisualState x:Name="BottomReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="{StaticResource ListViewItemReorderHintOffset}" Direction="Bottom" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TopReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="{StaticResource ListViewItemReorderHintOffset}" Direction="Top" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="{StaticResource ListViewItemReorderHintOffset}" Direction="Right" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LeftReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="{StaticResource ListViewItemReorderHintOffset}" Direction="Left" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DataVirtualizationStates">
                                <VisualState x:Name="DataAvailable"/>
                                <VisualState x:Name="DataPlaceholder">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" 
                                                           Storyboard.TargetProperty="Visibility" 
                                                           Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" 
                                                           Storyboard.TargetProperty="Visibility" 
                                                           Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="ReorderHintContent" Background="Transparent">
                            <Path x:Name="SelectingGlyph" Opacity="0" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemHighlightBrush}" Height="13" Stretch="Fill" Width="15" HorizontalAlignment="Right" Margin="0,5.5,5.5,0" VerticalAlignment="Top"/>
                            <Border x:Name="ContentContainer">
                                <!-- This extra wrapper grid is necessary because rendertransforms set by the reorder hint animations
                                     will be lost when ContentContainer becomes a LTE -->
                                <Grid x:Name="InnerDragContent">
                                    <Border x:Name="HintGlyphBorder"
                                Height="40"
                                Width="40"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Opacity="0"
                                Margin="4">
                                        <Path x:Name="HintGlyph" Opacity="0" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckHintGlyphBrush}" Height="13" Stretch="Fill"  Width="15" HorizontalAlignment="Right" Margin="0,5.5,5.5,0" VerticalAlignment="Top"/>
                                    </Border>
                                    <Rectangle x:Name="PointerOverBorder"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource ListViewItemPointerOverBrush}"
                                   Margin="1" />
                                    <Rectangle x:Name="FocusVisual"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   StrokeThickness="2"
                                   Stroke="{StaticResource ListViewItemKeyboardFocusBrush}" />
                                    <Rectangle x:Name="SelectionBackground"
                                   Margin="4"
                                   Fill="{StaticResource HiloHighlightBrush}"
                                   Opacity="0" />
                                    <Border x:Name="ContentBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="4">
                                        <Grid>
                                            <ContentPresenter x:Name="contentPresenter"
                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" />
                                            <!-- The 'Xg' text simulates the amount of space one line of text will occupy.
                                                 In the DataPlaceholder state, the Content is not loaded yet so we
                                                 approximate the size of the item using placeholder text. -->
                                            <TextBlock x:Name="PlaceholderTextBlock"
                                           Visibility="Collapsed"
                                           Text="Xg"
                                           Foreground="{x:Null}"
                                           Margin="{TemplateBinding Padding}"
                                           IsHitTestVisible="False"/>
                                            <Rectangle x:Name="PlaceholderRect"
                                           Visibility="Collapsed"
                                           Fill="{StaticResource HiloDefaultImageBrush}"
                                           IsHitTestVisible="False"/>
                                            <Rectangle x:Name="SelectedBorder"
                                           IsHitTestVisible="False"
                                           Opacity="0"
                                           StrokeThickness="{StaticResource GridViewItemSelectedBorderThickness}" Stroke="{StaticResource HiloHighlightBrush}" />
                                        </Grid>
                                    </Border>
                                    <Border x:Name="SelectedCheckMarkOuter"
                                IsHitTestVisible="False"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Padding="{TemplateBinding BorderThickness}"
                                Margin="4">
                                        <Grid x:Name="SelectedCheckMark" Opacity="0" Height="40" Width="40">
                                            <Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z"  Fill="{StaticResource HiloHighlightBrush}" Stretch="Fill"/>
                                            <Path Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckGlyphBrush}" Height="13" Stretch="Fill" Width="15" HorizontalAlignment="Right" Margin="0,5.5,5.5,0" VerticalAlignment="Top" FlowDirection="LeftToRight"/>
                                        </Grid>
                                    </Border>
                                    <Rectangle  x:Name="MultiArrangeOverlayBackground"
                                    IsHitTestVisible="False"
                                    Opacity="0"
                                    Fill="{StaticResource ListViewItemDragBackgroundBrush}" Margin="4" />
                                    <TextBlock x:Name="MultiArrangeOverlayText"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                   TextWrapping="Wrap"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Top"
                                   Margin="4">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="FontSize" Value="56" />
                                    <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}" />
                                    <Setter Property="FontWeight" Value="Light" />
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Bottom" />
                                    <Setter Property="Margin" Value="12,0,0,0" />
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                    <Setter Property="TextTrimming" Value="WordEllipsis" />
                                </Style>
                            </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FilmStrip GridViewItem Style -->
    <Style x:Key="HiloFilmStripImageGridViewItem" TargetType="GridViewItem">
        <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
        <Setter Property="Background" Value="{StaticResource GreySplashScreenColor}"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="IsHoldingEnabled" Value="True"/>
        <Setter Property="Margin" Value="0,0,10,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="GridViewItem">
                    <Border x:Name="OuterContainer">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PointerOverBorder"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0"
                                             To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <TapDownThemeAnimation TargetName="ContentContainer" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="contentPresenter" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0"
                                             To="{StaticResource ListViewItemDisabledOpacity}" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionHintStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="NoSelectionHint" GeneratedDuration="0:0:0.65"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="VerticalSelectionHint">
                                    <Storyboard>
                                        <SwipeHintThemeAnimation TargetName="SelectionBackground" ToVerticalOffset="25" ToHorizontalOffset="0" />
                                        <SwipeHintThemeAnimation TargetName="ContentBorder" ToVerticalOffset="25" ToHorizontalOffset="0" />
                                        <SwipeHintThemeAnimation TargetName="SelectedCheckMark" ToVerticalOffset="25" ToHorizontalOffset="0" />
                                        <DoubleAnimation Storyboard.TargetName="HintGlyph" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0"
                                             To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HorizontalSelectionHint">
                                    <Storyboard>
                                        <SwipeHintThemeAnimation TargetName="SelectionBackground" ToHorizontalOffset="-25" ToVerticalOffset="0" />
                                        <SwipeHintThemeAnimation TargetName="ContentBorder" ToHorizontalOffset="-25" ToVerticalOffset="0" />
                                        <SwipeHintThemeAnimation TargetName="SelectedCheckMark" ToHorizontalOffset="-25" ToVerticalOffset="0" />
                                        <DoubleAnimation Storyboard.TargetName="HintGlyph" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoSelectionHint" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selecting">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectionBackground" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="SelectingGlyph" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="HintGlyphBorder" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectionBackground" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="SelectedCheckMark" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselecting">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HintGlyphBorder" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HintGlyphBorder" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectionBackground" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="SelectedCheckMark" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DragStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="NotDragging" GeneratedDuration="0:0:0.650"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NotDragging" />
                                <VisualState x:Name="Dragging">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="InnerDragContent" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="{StaticResource ListViewItemDragOpacity}" />
                                        <DragItemThemeAnimation TargetName="InnerDragContent" />
                                        <FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter" />
                                        <FadeOutThemeAnimation TargetName="SelectedBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DraggingTarget">
                                    <Storyboard>
                                        <DropTargetItemThemeAnimation TargetName="OuterContainer" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MultipleDraggingPrimary">
                                    <Storyboard>
                                        <!-- These two Opacity animations are required - the FadeInThemeAnimations
                                             on the same elements animate an internal Opacity. -->
                                        <DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayBackground" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayText" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="1" />
                                        <DoubleAnimation Storyboard.TargetName="InnerDragContent" 
                                             Storyboard.TargetProperty="Opacity" 
                                             Duration="0" 
                                             To="{StaticResource ListViewItemDragOpacity}" />
                                        <FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
                                        <FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
                                        <DragItemThemeAnimation TargetName="InnerDragContent" />
                                        <FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter" />
                                        <FadeOutThemeAnimation TargetName="SelectedBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MultipleDraggingSecondary">
                                    <Storyboard>
                                        <FadeOutThemeAnimation TargetName="ContentContainer" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ReorderHintStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="NoReorderHint" GeneratedDuration="0:0:0.65"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NoReorderHint"/>
                                <VisualState x:Name="BottomReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="{StaticResource ListViewItemReorderHintOffset}" Direction="Bottom" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TopReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="{StaticResource ListViewItemReorderHintOffset}" Direction="Top" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="{StaticResource ListViewItemReorderHintOffset}" Direction="Right" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LeftReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation TargetName="ReorderHintContent" ToOffset="{StaticResource ListViewItemReorderHintOffset}" Direction="Left" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DataVirtualizationStates">
                                <VisualState x:Name="DataAvailable"/>
                                <VisualState x:Name="DataPlaceholder">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" 
                                                           Storyboard.TargetProperty="Visibility" 
                                                           Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" 
                                                           Storyboard.TargetProperty="Visibility" 
                                                           Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="ReorderHintContent" Background="Transparent">
                            <Path x:Name="SelectingGlyph" Opacity="0" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemHighlightBrush}" Height="13" Stretch="Fill" Width="15" HorizontalAlignment="Right" Margin="0,5.5,5.5,0" VerticalAlignment="Top"/>
                            <Border x:Name="ContentContainer">
                                <!-- This extra wrapper grid is necessary because rendertransforms set by the reorder hint animations
                                     will be lost when ContentContainer becomes a LTE -->
                                <Grid x:Name="InnerDragContent">
                                    <Border x:Name="HintGlyphBorder"
                                Height="40"
                                Width="40"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Opacity="0"
                                Margin="4">
                                        <Path x:Name="HintGlyph" Opacity="0" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckHintGlyphBrush}" Height="13" Stretch="Fill"  Width="15" HorizontalAlignment="Right" Margin="0,5.5,5.5,0" VerticalAlignment="Top"/>
                                    </Border>
                                    <Rectangle x:Name="PointerOverBorder"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource ListViewItemPointerOverBrush}"
                                   Margin="1" />
                                    <Rectangle x:Name="FocusVisual"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   StrokeThickness="2"
                                   Stroke="{StaticResource ListViewItemKeyboardFocusBrush}" />
                                    <Rectangle x:Name="SelectionBackground"
                                   Margin="4"
                                   Fill="{StaticResource HiloHighlightBrush}"
                                   Opacity="0" />
                                    <Border x:Name="ContentBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="4">
                                        <Grid>
                                            <ContentPresenter x:Name="contentPresenter"
                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" />
                                            <!-- The 'Xg' text simulates the amount of space one line of text will occupy.
                                                 In the DataPlaceholder state, the Content is not loaded yet so we
                                                 approximate the size of the item using placeholder text. -->
                                            <TextBlock x:Name="PlaceholderTextBlock"
                                           Visibility="Collapsed"
                                           Text="Xg"
                                           Foreground="{x:Null}"
                                           Margin="{TemplateBinding Padding}"
                                           IsHitTestVisible="False"/>
                                            <Rectangle x:Name="PlaceholderRect"
                                           Visibility="Collapsed"
                                           Fill="{StaticResource GreySplashScreenColor}"
                                           IsHitTestVisible="False"/>
                                            <Rectangle x:Name="SelectedBorder"
                                           IsHitTestVisible="False"
                                           Opacity="0"
                                           StrokeThickness="{StaticResource GridViewItemSelectedBorderThickness}" Stroke="{StaticResource HiloHighlightBrush}" />
                                        </Grid>
                                    </Border>
                                    <Border x:Name="SelectedCheckMarkOuter"
                                IsHitTestVisible="False"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Padding="{TemplateBinding BorderThickness}"
                                Margin="4">
                                        <Grid x:Name="SelectedCheckMark" />
                                    </Border>
                                    <Rectangle  x:Name="MultiArrangeOverlayBackground"
                                    IsHitTestVisible="False"
                                    Opacity="0"
                                    Fill="{StaticResource ListViewItemDragBackgroundBrush}" Margin="4" />
                                    <TextBlock x:Name="MultiArrangeOverlayText"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                   TextWrapping="Wrap"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Top"
                                   Margin="4">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="FontSize" Value="56" />
                                    <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}" />
                                    <Setter Property="FontWeight" Value="Light" />
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Bottom" />
                                    <Setter Property="Margin" Value="12,0,0,0" />
                                    <Setter Property="TextWrapping" Value="Wrap" />
                                    <Setter Property="TextTrimming" Value="WordEllipsis" />
                                </Style>
                            </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
